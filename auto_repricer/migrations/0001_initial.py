# Generated by Django 5.2 on 2025-04-08 18:13

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('sku', models.CharField(help_text='Stock Keeping Unit', max_length=100)),
                ('asin', models.CharField(blank=True, help_text='Amazon Standard Identification Number', max_length=20, null=True)),
                ('marketplace', models.CharField(choices=[('amazon', 'Amazon'), ('ebay', 'eBay'), ('walmart', 'Walmart'), ('etsy', 'Etsy'), ('shopify', 'Shopify'), ('other', 'Other')], default='amazon', max_length=50)),
                ('product_url', models.URLField(max_length=2000)),
                ('current_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('min_price', models.DecimalField(decimal_places=2, help_text='Minimum price floor', max_digits=10)),
                ('max_price', models.DecimalField(decimal_places=2, help_text='Maximum price ceiling', max_digits=10)),
                ('cost_price', models.DecimalField(decimal_places=2, help_text='Product cost price', max_digits=10)),
                ('buy_box_status', models.BooleanField(default=False, help_text='Whether this product is winning the Buy Box')),
                ('is_active', models.BooleanField(default=True)),
                ('last_repriced', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RepricingRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('rule_type', models.CharField(choices=[('match_lowest', 'Match Lowest Price'), ('beat_lowest', 'Beat Lowest Price'), ('match_buy_box', 'Match Buy Box'), ('beat_buy_box', 'Beat Buy Box'), ('fixed_margin', 'Fixed Margin'), ('dynamic_margin', 'Dynamic Margin'), ('custom', 'Custom Formula')], max_length=50)),
                ('adjustment_value', models.DecimalField(decimal_places=2, default=0.0, help_text='Adjustment value (percentage or fixed amount)', max_digits=6)),
                ('is_percentage', models.BooleanField(default=True, help_text='If True, adjustment is a percentage')),
                ('min_profit_margin', models.DecimalField(decimal_places=2, default=10.0, help_text='Minimum profit margin percentage', max_digits=6)),
                ('custom_formula', models.TextField(blank=True, help_text='Custom pricing formula (for custom rule type)', null=True)),
                ('apply_to_all_products', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='repricing_rules', to=settings.AUTH_USER_MODEL)),
                ('products', models.ManyToManyField(blank=True, related_name='rules', to='auto_repricer.userproduct')),
            ],
        ),
        migrations.CreateModel(
            name='RepricingHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('new_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('buy_box_won', models.BooleanField(help_text='Whether this repricing resulted in winning the Buy Box', null=True)),
                ('rule_name', models.CharField(help_text='Name of the rule at time of repricing', max_length=100)),
                ('rule', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='repricing_history', to='auto_repricer.repricingrule')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='repricing_history', to='auto_repricer.userproduct')),
            ],
            options={
                'verbose_name_plural': 'Repricing histories',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Competitor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Competitor's product name or seller name", max_length=255)),
                ('url', models.URLField(help_text="URL to the competitor's product", max_length=2000)),
                ('current_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('shipping_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('has_buy_box', models.BooleanField(default=False)),
                ('last_checked', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='competitors', to='auto_repricer.userproduct')),
            ],
        ),
    ]
